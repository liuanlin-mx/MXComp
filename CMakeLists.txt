# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 3.0)


#{{{{ User Code 01
# Place your code here
#}}}}

enable_language(CXX C ASM)
# Project name
project(mx_comp)



#{{{{ User Code 02
# Place your code here
#}}}}

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "linux_vst_cmake")

set(CL_WORKSPACE_DIRECTORY .)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_mx_comp_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    .
    src
    imgui
    imgui_vst_backend
    imgui-knobs
    implot

)


# Compiler options
add_definitions(-fPIC)
add_definitions(-Os)
add_definitions(-O2)
add_definitions(-Wall)
add_definitions(
    -DGLFW_EXPOSE_NATIVE_X11
)


# Linker options
set(LINK_OPTIONS -static-libstdc++)
set(LINK_OPTIONS ${LINK_OPTIONS} -static-libgcc)
set(LINK_OPTIONS ${LINK_OPTIONS} -Wl,--no-undefined)
set(LINK_OPTIONS ${LINK_OPTIONS} -Wl,-Bsymbolic)
set(LINK_OPTIONS ${LINK_OPTIONS} -Wl,-Bstatic)
set(LINK_OPTIONS ${LINK_OPTIONS} -lfftw3f)
set(LINK_OPTIONS ${LINK_OPTIONS} -Wl,-Bdynamic)
set(LINK_OPTIONS ${LINK_OPTIONS} -fPIC)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
)

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/implot/implot_items.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/plugin_editor.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/wave_view.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/plugin_processor.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/rgb2texture.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/ring_buffer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/pluginterfaces/vst2.x/vstplugmain.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui_vst_backend/imgui_vst_editor.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui-knobs/imgui-knobs.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/rms.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui_vst_backend/imgui_impl_opengl2.cpp
    ${CMAKE_CURRENT_LIST_DIR}/implot/implot.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui_vst_backend/imgui_impl_glfw.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/compressor.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/fft_view.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/fft.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/eq_analysis.cpp
    ${CMAKE_CURRENT_LIST_DIR}/pluginterfaces/vst2.x/audioeffect.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/level_meter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui/imgui_widgets.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/delay.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui/imgui_draw.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui/imgui_demo.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui/imgui.cpp
    ${CMAKE_CURRENT_LIST_DIR}/imgui/imgui_tables.cpp
    ${CMAKE_CURRENT_LIST_DIR}/pluginterfaces/vst2.x/audioeffectx.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -fPIC -Os -O2 -Wall")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_library(mx_comp SHARED ${RC_SRCS} ${CXX_SRCS} ${C_SRCS} ${ASM_SRCS})
target_link_libraries(mx_comp ${LINK_OPTIONS})

target_link_libraries(mx_comp
    glfw
    OpenGL
    X11
    dl
    pthread
)



#{{{{ User Code 3
# Place your code here
#}}}}

